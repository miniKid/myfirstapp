{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","SubMenu","Menu","Header","Layout","Content","Sider","MyLayout","className","width","style","background","mode","defaultSelectedKeys","defaultOpenKeys","height","borderRight","key","title","type","Item","to","padding","margin","minHeight","path","component","MyPatentTable","MyStock","render","React","Component","columns","dataIndex","patentState","color","dataSource","patentID","patentAuthor","patentStyle","patentTitle","patentAbstract","expandedRowRender","record","tooltip","trigger","xAxis","data","dataZoom","start","end","yAxis","scale","text","left","series","option","this","getOption","App","src","logo","alt","href","target","rel","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e4c7be90.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { Layout, Menu, Breadcrumb, Icon } from 'antd';\nimport { Table, Tag } from 'antd';\n\nimport {BrowserRouter, Route, Switch, Link} from 'react-router-dom';\n\nimport ReactEcharts from 'echarts-for-react';\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Sider } = Layout;\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n      <MyLayout />\n    </div>\n  );\n}\n\nclass MyLayout extends React.Component {\n  render() {\n    return(\n      <Layout>\n        <Header className=\"header\"></Header>\n        <BrowserRouter>\n          <Layout>\n            <Sider width={200} style={{ background: '#fff'}}>\n              <Menu \n                mode=\"inline\"\n                defaultSelectedKeys={['1']}\n                defaultOpenKeys={['sub1']}\n                style={{ height: '100%', borderRight: 0}}\n              >\n                <SubMenu\n                  key=\"sub1\"\n                  title={\n                    <span>\n                      <Icon type=\"user\"></Icon>\n                      subnav1\n                    </span>\n                  }\n                >\n                  <Menu.Item key=\"1\"><Link to=\"/patent\">专利</Link></Menu.Item>\n                  <Menu.Item key=\"2\"><Link to=\"/stock\">基金</Link></Menu.Item>\n                </SubMenu>\n                <SubMenu\n                  key=\"sub2\"\n                  title={\n                    <span>\n                      <Icon type=\"user\"></Icon>\n                      subnav2\n                    </span>\n                  }\n                >\n                  <Menu.Item key=\"3\">option3</Menu.Item>\n                  <Menu.Item key=\"4\">option4</Menu.Item>\n                </SubMenu>\n              </Menu>\n            </Sider>\n            <Layout style={{ padding: '0 24px 24px' }}>\n              <Breadcrumb style={{ margin: '16px 0' }}>\n                <Breadcrumb.Item>Home</Breadcrumb.Item>\n                <Breadcrumb.Item>List</Breadcrumb.Item>\n                <Breadcrumb.Item>App</Breadcrumb.Item>\n              </Breadcrumb>\n              <Content\n                style={{\n                  background: '#fff',\n                  padding: 24,\n                  margin: 0,\n                  minHeight: 280,\n                }}\n              >\n                <Switch>\n                  <Route path=\"/patent\" component={MyPatentTable}></Route>\n                  <Route path=\"/stock\" component={MyStock}></Route>\n                  <Route render={()=> <p>Home</p>}></Route>\n                </Switch>\n              </Content>\n            </Layout>\n          </Layout>\n        </BrowserRouter>\n        \n      </Layout>\n    )\n  }\n}\n\nclass MyPatentTable extends React.Component {\n  render() {\n    const columns = [\n      {\n        title:'专利ID',\n        dataIndex: 'patentID',\n      },\n      {\n        title: '发明人',\n        dataIndex: 'patentAuthor',\n      },\n      {\n        title: '专利状态',\n        dataIndex: 'patentState',\n        render: patentState => {\n          let color = patentState === '授权' ? 'green' : 'geekblue';\n          if (patentState === '驳回') {\n            color = 'red';\n          }\n          return (\n            <Tag color = {color}>\n              {patentState}\n            </Tag>\n          );\n        }\n      },\n      {\n        title: '专利类型',\n        dataIndex: 'patentStyle',\n      },\n      {\n        title: '专利名称',\n        dataIndex: 'patentTitle',\n        \n      },\n    ];\n    \n    const data = [\n      {\n        key: '1',\n        patentID: 'CN201520566589.1',\n        patentAuthor: '冯晓明;池敏越',\n        patentState: '授权',\n        patentStyle: '中国实用新型',\n        patentTitle: '马桶',\n        patentAbstract: '本实用新型公开了一种马桶，其包括桶身、粪便采集装置及粪便检测装置。所述桶身形成有马桶池及腔室，所述腔室与马桶池连通。所述粪便采集装置设置于所述腔室内，所述粪便采集装置用于采集所述马桶池内的粪便。所述粪便检测装置设置于所述腔室内，所述粪便检测装置用于检测所述粪便采集装置采集的粪便。本实用新型实施方式的马桶安装在家内后使得受检者在家内上厕所的时候即可方便地进行粪便检测，大大方便受检者。另外，马桶也可以安装在医院内，如此，也可以方便受检者。',\n      },\n      {\n        key: '2',\n        patentID: 'CN201510472101.3',\n        patentAuthor: '池敏越',\n        patentState: '实审',\n        patentStyle: '中国发明专利',\n        patentTitle: '胎心监测装置',\n        patentAbstract: '本发明公开了一种胎心监测装置，包括：用于探测腹壁处混合信号的第一采集探头；与所述第一采集探头相连的第一信号采集模块，所述第一信号采集模块用于对所述混合信号进行处理以输出第一数字信号；与所述第一信号采集模块相连的胎心提取模块，所述胎心提取模块用于根据所述第一数字信号提取胎心信号；与所述胎心提取模块相连的分析计算模块，所述计算模块用于对所述胎心信号进行分析以获取分析结果，并根据所述分析结果计算胎心参数。由此，该胎心监测装置通过被动方式采集人体的生理信号，不主动发射超声波，可实时获取胎儿的健康信息，并计算出胎心参数，为用户提供直观的量化指标。',\n      },\n      {\n        key: '3',\n        patentID: 'CN201520580138.3',\n        patentAuthor: '池敏越',\n        patentState: '授权',\n        patentStyle: '中国实用新型',\n        patentTitle: '胎心监测装置',\n        patentAbstract: '本实用新型公开了一种胎心监测装置，包括：用于探测腹壁处混合信号的第一采集探头；与所述第一采集探头相连的第一信号采集模块，所述第一信号采集模块用于对所述混合信号进行处理以输出第一数字信号；与所述第一信号采集模块相连的胎心提取模块，所述胎心提取模块用于根据所述第一数字信号提取胎心信号；与所述胎心提取模块相连的分析计算模块，所述计算模块用于对所述胎心信号进行分析以获取分析结果，并根据所述分析结果计算胎心参数。由此，该胎心监测装置通过被动方式采集人体的生理信号，不主动发射超声波，可实时获取胎儿的健康信息，并计算出胎心参数，为用户提供直观的量化指标。',\n      },\n    ];\n    return(\n      <Table columns={columns} dataSource={data} \n        expandedRowRender={record => <p style={{ margin: 0 }}>{record.patentAbstract}</p>}\n      />\n    );\n  }\n}\n\nclass MyStock extends React.Component {\n  getOption() {\n    const xAxisData = ['2019-06-19','2019-06-26','2019-07-02','2019-07-09','2019-07-16','2019-07-23','2019-07-30','2019-08-06','2019-08-13','2019-08-20','2019-08-27','2019-09-03','2019-09-10','2019-09-17','2019-09-24'];\n    const series1Data = [4858.92, 4962.59,5084.41,4881.62,4932.05,4823.92,4922.92,4751.98, 4658.39,4872.61,4936.12,5044.18,5245.31,5140.45,5180.74];\n    const option = {\n      tooltip: {\n          trigger: 'axis',\n      },\n      xAxis: {\n          type: 'category',\n          data: xAxisData,\n      },\n      dataZoom: {\n          type:'slider',\n          start:0,\n          end:100,\n      },\n      yAxis: {\n          type: 'value',\n          scale:true,\n      },\n      title: {\n        text: 'stock',\n        left: 'center',\n      },\n      series: [{\n          data: series1Data,\n          type: 'line'\n      }]\n  };\n    return option;\n  }\n  render() {\n    return(\n      <ReactEcharts\n        option={this.getOption()}\n         />\n    );\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}